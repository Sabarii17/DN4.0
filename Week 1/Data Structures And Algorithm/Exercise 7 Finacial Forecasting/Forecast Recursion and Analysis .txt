 Recursion

Recursion is a programming technique where a function calls itself to solve smaller instances of the same problem.

It continues to break down the problem until it reaches a base case, which is the simplest form of the problem that can be solved directly.

 How Recursion Simplifies Problems?

It provides a clean and elegant solution for problems that have a repetitive or sequential pattern, like financial forecasting.

It reduces the need for loops and state management by breaking the problem into subproblems.


Time Complexity of Recursive Algorithm

Each recursive call reduces the number of years by 1.

Therefore, for n years, the function makes n recursive calls.

Time Complexity:

O(n), where n is the number of years.

Space Complexity:

Also O(n) due to the function call stack.


How to Optimize the Recursive Solution?

* Use Iteration Instead of Recursion

* Memoization (if overlapping subproblems exist) - Store results

* Tail Recursion 
